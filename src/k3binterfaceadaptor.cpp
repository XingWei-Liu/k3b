/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a k3binterfaceadaptor -c K3bInterfaceAdaptor -i k3binterface.h -l K3b::Interface /home/ubuntu/k3b-19.12.3/src/org.k3b.MainWindow.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#include "k3binterfaceadaptor.h"
#include <QtCore/QMetaObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>

/*
 * Implementation of adaptor class K3bInterfaceAdaptor
 */

K3bInterfaceAdaptor::K3bInterfaceAdaptor(K3b::Interface *parent)
    : QDBusAbstractAdaptor(parent)
{
    // constructor
    setAutoRelaySignals(true);
}

K3bInterfaceAdaptor::~K3bInterfaceAdaptor()
{
    // destructor
}

void K3bInterfaceAdaptor::addUrl(const QString &url)
{
    // handle method call org.k3b.MainWindow.addUrl
    parent()->addUrl(url);
}

void K3bInterfaceAdaptor::addUrls(const QStringList &urls)
{
    // handle method call org.k3b.MainWindow.addUrls
    parent()->addUrls(urls);
}

void K3bInterfaceAdaptor::audioCdRip(const QString &dev)
{
    // handle method call org.k3b.MainWindow.audioCdRip
    parent()->audioCdRip(dev);
}

void K3bInterfaceAdaptor::audioCdRip()
{
    // handle method call org.k3b.MainWindow.audioCdRip
    parent()->audioCdRip();
}

bool K3bInterfaceAdaptor::blocked()
{
    // handle method call org.k3b.MainWindow.blocked
    return parent()->blocked();
}

void K3bInterfaceAdaptor::copyMedium(const QString &dev)
{
    // handle method call org.k3b.MainWindow.copyMedium
    parent()->copyMedium(dev);
}

void K3bInterfaceAdaptor::copyMedium()
{
    // handle method call org.k3b.MainWindow.copyMedium
    parent()->copyMedium();
}

QString K3bInterfaceAdaptor::createAudioProject()
{
    // handle method call org.k3b.MainWindow.createAudioProject
    return parent()->createAudioProject();
}

QString K3bInterfaceAdaptor::createDataProject()
{
    // handle method call org.k3b.MainWindow.createDataProject
    return parent()->createDataProject();
}

QString K3bInterfaceAdaptor::createMixedProject()
{
    // handle method call org.k3b.MainWindow.createMixedProject
    return parent()->createMixedProject();
}

QString K3bInterfaceAdaptor::createMovixProject()
{
    // handle method call org.k3b.MainWindow.createMovixProject
    return parent()->createMovixProject();
}

QString K3bInterfaceAdaptor::createVcdProject()
{
    // handle method call org.k3b.MainWindow.createVcdProject
    return parent()->createVcdProject();
}

QString K3bInterfaceAdaptor::createVideoDvdProject()
{
    // handle method call org.k3b.MainWindow.createVideoDvdProject
    return parent()->createVideoDvdProject();
}

QString K3bInterfaceAdaptor::currentProject()
{
    // handle method call org.k3b.MainWindow.currentProject
    return parent()->currentProject();
}

void K3bInterfaceAdaptor::formatMedium()
{
    // handle method call org.k3b.MainWindow.formatMedium
    parent()->formatMedium();
}

QString K3bInterfaceAdaptor::openProject(const QString &url)
{
    // handle method call org.k3b.MainWindow.openProject
    return parent()->openProject(url);
}

QStringList K3bInterfaceAdaptor::projects()
{
    // handle method call org.k3b.MainWindow.projects
    return parent()->projects();
}

void K3bInterfaceAdaptor::videoCdRip(const QString &dev)
{
    // handle method call org.k3b.MainWindow.videoCdRip
    parent()->videoCdRip(dev);
}

void K3bInterfaceAdaptor::videoCdRip()
{
    // handle method call org.k3b.MainWindow.videoCdRip
    parent()->videoCdRip();
}

void K3bInterfaceAdaptor::videoDvdRip(const QString &dev)
{
    // handle method call org.k3b.MainWindow.videoDvdRip
    parent()->videoDvdRip(dev);
}

void K3bInterfaceAdaptor::videoDvdRip()
{
    // handle method call org.k3b.MainWindow.videoDvdRip
    parent()->videoDvdRip();
}

void K3bInterfaceAdaptor::writeImage(const QString &url)
{
    // handle method call org.k3b.MainWindow.writeImage
    parent()->writeImage(url);
}

void K3bInterfaceAdaptor::writeImage()
{
    // handle method call org.k3b.MainWindow.writeImage
    parent()->writeImage();
}


#include "k3binterfaceadaptor.moc"
