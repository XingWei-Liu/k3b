/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a k3bjobinterfaceadaptor -c K3bJobInterfaceAdaptor -i k3bjobinterface.h -l K3b::JobInterface /home/ubuntu/k3b-19.12.3/src/org.k3b.Job.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef K3BJOBINTERFACEADAPTOR_H
#define K3BJOBINTERFACEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "k3bjobinterface.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.k3b.Job
 */
class K3bJobInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.k3b.Job")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.k3b.Job\">\n"
"    <signal name=\"started\"/>\n"
"    <signal name=\"canceled\"/>\n"
"    <signal name=\"finished\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </signal>\n"
"    <signal name=\"infoMessage\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"progress\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"subProgress\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"newTask\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"newSubTask\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </signal>\n"
"    <signal name=\"buffer\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"deviceBuffer\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </signal>\n"
"    <signal name=\"nextTrack\">\n"
"      <arg direction=\"out\" type=\"i\" name=\"track\"/>\n"
"      <arg direction=\"out\" type=\"i\" name=\"numTracks\"/>\n"
"    </signal>\n"
"    <method name=\"jobRunning\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"jobDescription\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"    <method name=\"jobDetails\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    K3bJobInterfaceAdaptor(K3b::JobInterface *parent);
    virtual ~K3bJobInterfaceAdaptor();

    inline K3b::JobInterface *parent() const
    { return static_cast<K3b::JobInterface *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    QString jobDescription();
    QString jobDetails();
    bool jobRunning();
Q_SIGNALS: // SIGNALS
    void buffer(int in0);
    void canceled();
    void deviceBuffer(int in0);
    void finished(bool in0);
    void infoMessage(const QString &in0, int in1);
    void newSubTask(const QString &in0);
    void newTask(const QString &in0);
    void nextTrack(int track, int numTracks);
    void progress(int in0);
    void started();
    void subProgress(int in0);
};

#endif
