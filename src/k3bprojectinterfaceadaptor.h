/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -m -a k3bprojectinterfaceadaptor -c K3bProjectInterfaceAdaptor -i k3bprojectinterface.h -l K3b::ProjectInterface /home/ubuntu/k3b-19.12.3/src/org.k3b.Project.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * This file may have been hand-edited. Look for HAND-EDIT comments
 * before re-generating it.
 */

#ifndef K3BPROJECTINTERFACEADAPTOR_H
#define K3BPROJECTINTERFACEADAPTOR_H

#include <QtCore/QObject>
#include <QtDBus/QtDBus>
#include "k3bprojectinterface.h"
QT_BEGIN_NAMESPACE
class QByteArray;
template<class T> class QList;
template<class Key, class Value> class QMap;
class QString;
class QStringList;
class QVariant;
QT_END_NAMESPACE

/*
 * Adaptor class for interface org.k3b.Project
 */
class K3bProjectInterfaceAdaptor: public QDBusAbstractAdaptor
{
    Q_OBJECT
    Q_CLASSINFO("D-Bus Interface", "org.k3b.Project")
    Q_CLASSINFO("D-Bus Introspection", ""
"  <interface name=\"org.k3b.Project\">\n"
"    <method name=\"addUrls\">\n"
"      <arg direction=\"in\" type=\"as\" name=\"urls\"/>\n"
"    </method>\n"
"    <method name=\"addUrl\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"url\"/>\n"
"    </method>\n"
"    <method name=\"burn\"/>\n"
"    <method name=\"directBurn\">\n"
"      <arg direction=\"out\" type=\"b\"/>\n"
"    </method>\n"
"    <method name=\"setBurnDevice\">\n"
"      <arg direction=\"in\" type=\"s\" name=\"blockdevicename\"/>\n"
"    </method>\n"
"    <method name=\"length\">\n"
"      <arg direction=\"out\" type=\"i\"/>\n"
"    </method>\n"
"    <method name=\"imagePath\"/>\n"
"    <method name=\"projectType\">\n"
"      <arg direction=\"out\" type=\"s\"/>\n"
"    </method>\n"
"  </interface>\n"
        "")
public:
    K3bProjectInterfaceAdaptor(K3b::ProjectInterface *parent);
    virtual ~K3bProjectInterfaceAdaptor();

    inline K3b::ProjectInterface *parent() const
    { return static_cast<K3b::ProjectInterface *>(QObject::parent()); }

public: // PROPERTIES
public Q_SLOTS: // METHODS
    void addUrl(const QString &url);
    void addUrls(const QStringList &urls);
    void burn();
    bool directBurn();
    void imagePath();
    int length();
    QString projectType();
    void setBurnDevice(const QString &blockdevicename);
Q_SIGNALS: // SIGNALS
};

#endif
